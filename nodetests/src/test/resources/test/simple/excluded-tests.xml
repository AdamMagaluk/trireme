<ExcludedTests>
    <!-- This file contains a list of tests that, although they exist in the Node test suite, we have excluded
         them. This lets us simply copy the Node test suite to ours rather than try to maintain a file synchronization,
         but we can exclude them here. -->

    <!-- NOT IMPLEMENTED YET
         These are modules that we plan to implement but have not worked on yet other than
         the very basics.
    -->
    <Excluded>
        <Name>test-cluster.+\.js</Name>
        <Description>cluster module support planned but not implemented.</Description>
    </Excluded>
    <Excluded>
        <Name>test-child-process.+\.js</Name>
        <Description>Support for handles and sockets not done yet.</Description>
    </Excluded>
    <Excluded>
        <Name>test-crypto-ecb.js</Name>
        <Description>Cipher not yet implemented</Description>
    </Excluded>
    <Excluded>
        <Name>test-crypto-padding-aes256.js</Name>
        <Description>Cipher not yet implemented</Description>
    </Excluded>
    <Excluded>
        <Name>test-crypto-padding.js</Name>
        <Description>Cipher not yet implemented</Description>
    </Excluded>
    <Excluded>
        <Name>test-domain-crypto.js</Name>
        <Description>Not all of crypto implemented.</Description>
    </Excluded>
    <Excluded>
        <Name>test-dgram.*address.*\.js</Name>
        <Description>Can't support IPv6 addresses yet.</Description>
    </Excluded>
    <Excluded>
        <Name>test-chdir.js</Name>
        <Description>Not yet</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-server-stale-close.js</Name>
        <Description>Depends on us adding environment variable support to "fork".</Description>
    </Excluded>

    <!-- NOT SUPPORTED
         These are modules and tests that we don't plan to implement in Noderunner
    -->
    <Excluded>
        <Name>test-debug.+\.js</Name>
        <Description>Debug module support requires V8 and won't be implemented.</Description>
    </Excluded>
    <Excluded>
        <Name>test-c-ares.js</Name>
        <Description>This is a wrapper around some native code.</Description>
    </Excluded>
    <Excluded>
        <Name>test-.*repl.*\.js</Name>
        <Description>repl is only partially implemented</Description>
    </Excluded>

    <Excluded>
        <Name>test-dgram-multicast-multi-process.js</Name>
        <Description>Haven't tested or done infrastructure for multicast</Description>
    </Excluded>
    <Excluded>
        <Name>test-dgram-multicast-setTTL.js</Name>
        <Description>Haven't tested or done infrastructure for multicast</Description>
    </Excluded>
    <Excluded>
        <Name>test-dgram-broadcast-multi-process.js</Name>
        <Description>Can't test broadcast yet.</Description>
    </Excluded>

    <Excluded>
        <Name>test-http-unix-socket.js</Name>
        <Reason>UNIX sockets are not supported in Noderunner or in Java.</Reason>
    </Excluded>
    <Excluded>
        <Name>test-http-client-pipe-end.js</Name>
        <Description>Pipes are not supported in Noderunner or in Java.</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-client-response-domain.js</Name>
        <Description>Pipes are not supported in Noderunner or in Java.</Description>
    </Excluded>
    <Excluded>
        <Name>test-fs-watch.+</Name>
        <Description>Depends on native stuff.</Description>
    </Excluded>
    <Excluded>
        <Name>test-watch.*\.js</Name>
        <Description>File watching isn't implemented yet.</Description>
    </Excluded>
    <Excluded>
        <Name>test-umask.js</Name>
        <Description>Can't set that in Java.</Description>
    </Excluded>
    <Excluded>
        <Name>test-fs-write-file-sync.js</Name>
        <Description>Depends on umask.</Description>
    </Excluded>
    <Excluded>
        <Name>test-net-listen-fd0.js</Name>
        <Description>Listening on a file descriptor is not supported in Noderunner or Java.</Description>
    </Excluded>
    <Excluded>
        <Name>test-net-pingpong.js</Name>
        <Description>Listening on a file descriptor is not supported in Noderunner or Java.</Description>
    </Excluded>
    <Excluded>
        <Name>test-net-pipe-connect-errors.js</Name>
        <Description>No pipes in NR or Java.</Description>
    </Excluded>
    <Excluded>
        <Name>test-process-config.js</Name>
        <Description>Not implemented. Supposed to return the compilation params.</Description>
    </Excluded>
    <Excluded>
        <Name>test-typed-arrays.js</Name>
        <Description>Not supported in Rhino.</Description>
    </Excluded>
    <Excluded>
        <Name>test-arraybuffer.*\.js</Name>
        <Description>Not supported in Rhino.</Description>
    </Excluded>
    <Excluded>
        <Name>test-listen-fd.*\.js</Name>
        <Description>No network IO on fds or pipes.</Description>
    </Excluded>
    <Excluded>
        <Name>test-tty.*\.js</Name>
        <Description>Requires some tty support.</Description>
    </Excluded>
    <Excluded>
        <Name>test-deprecation.*\.js</Name>
        <Description>Rely on node process arguments.</Description>
    </Excluded>
    <Excluded>
        <Name>test-child-process-fork-exec-path.js</Name>
        <Description>Relies on making a copy of a file called "node" and executing it.</Description>
    </Excluded>
    <Excluded>
        <Name>test-signal.*\.js</Name>
        <Description>No signal handling.</Description>
    </Excluded>
     <Excluded>
        <Name>test-sigint.*\.js</Name>
        <Description>No signal handling.</Description>
    </Excluded>
    <Excluded>
        <Name>test-tls-connect-pipe.js</Name>
        <Description>No pipes in TLS</Description>
    </Excluded>

    <!-- DIFFERENT TESTS
         We have different versions of these tests in the "noderunner" directory because they must
         be different.
    -->
    <Excluded>
        <Name>test-crypto.js</Name>
        <Description>Noderunner version supports only Java ciphers and other stuff for now.</Description>
    </Excluded>
    <Excluded>
        <Name>test-dh.*\.js</Name>
        <Description>No DH implemented in crypto yet.</Description>
    </Excluded>
    <Excluded>
        <Name>test-buffer.js</Name>
        <Description>Relies on internal details of Node buffer implementation, like negative "sourceStart"
                     in copy. Copy in noderunner test dir.</Description>
    </Excluded>
    <Excluded>
        <Name>test-buffer-ascii.js</Name>
        <Description>Relies on Node's way of converting non-8-bit ASCII by stripping the high
                     bits. Java does it differently unless we custom code it.</Description>
    </Excluded>
    <Excluded>
        <Name>test-https-.+\.js</Name>
        <Description>All HTTPS tests are run from the "noderunner" directory because they
                     use a different keystore format.
        </Description>
    </Excluded>
    <Excluded>
        <Name>test-pipe-address.js</Name>
        <Reason>UNIX sockets are not supported in Noderunner or in Java.</Reason>
    </Excluded>
    <Excluded>
        <Name>test-pipe-stream.js</Name>
        <Reason>UNIX sockets are not supported in Noderunner or in Java.</Reason>
    </Excluded>
    <Excluded>
        <Name>test-pipe-unref.js</Name>
        <Reason>UNIX sockets are not supported in Noderunner or in Java.</Reason>
    </Excluded>
    <Excluded>
        <Name>test-http-client-timeout-event.js</Name>
        <Description>Timeouts are too short -- assumes connection is opened in 1 ms. Change second timeout
        to 100 ms and it works fine.</Description>
    </Excluded>
    <Excluded>
        <Name>test-domain.js</Name>
        <Description>Needs slightly different error messages to be tested, look in "noderunner".</Description>
    </Excluded>
    <Excluded>
        <Name>test-util-inspect.js</Name>
        <Description>Tries to modify objects that are sealed in Noderunner.</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-upgrade-.+\.js</Name>
        <Description>Assumes that all data on the socket after the upgrade comes in in one chunk.</Description>
    </Excluded>


    <!-- INTERNAL TESTS
         Tests that exercise internal, undocumented APIs in the original Node implementation.
    -->
    <Excluded>
        <Name>test-https-pfx.js</Name>
        <Description>Depends on internal SSL errors and cert parsing code.</Description>
    </Excluded>
    <Excluded>
        <Name>test-tcp-wrap.+</Name>
        <Description>Internal Node module.</Description>
    </Excluded>
    <Excluded>
        <Name>test-process-wrap.js</Name>
        <Description>Internal Node module.</Description>
    </Excluded>
    <Excluded>
        <Name>test-net-buffersize.js</Name>
        <Description>We don't track buffers the same way</Description>
    </Excluded>
    <Excluded>
        <Name>test-process-active-wraps.js</Name>
        <Description>Tests internal attributes of "process"</Description>
    </Excluded>
    <Excluded>
        <Name>test-process-exec-argv.js</Name>
        <Description>Tests some node command-line properties.</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-parser-bad-ref.js</Name>
        <Excluded>Uses V8 "gc" method.</Excluded>
    </Excluded>

    <!-- MISCELLANEOUS
         Tests that just don't work in Noderunner for other good reasons
    -->
    <Excluded>
        <Name>test-regress.+\.js</Name>
        <Description>These are a variety of tests that sometimes test stuff that's not supported.</Description>
    </Excluded>
    <Excluded>
        <Name>test-cli-eval.js</Name>
        <Description>Depends on different command-line params.</Description>
    </Excluded>
    <Excluded>
        <Name>test-eval.js</Name>
        <Description>Depends on different command-line params.</Description>
    </Excluded>
    <Excluded>
        <Name>test-executable-path.js</Name>
        <Description>Depends on different command-line params.</Description>
    </Excluded>

    <Excluded>
        <Name>test-eval-require.js</Name>
        <Description>We don't support the same command-line params.</Description>
    </Excluded>
    <Excluded>
        <Name>test-require-json.js</Name>
        <Reason>Checks against an error message when trying to parse JSON; Rhino and v8 generate different ones</Reason>
    </Excluded>
    <Excluded>
        <Name>test-fs-readfile-pipe.js</Name>
        <Reason>Depends on reading from /dev/stdin</Reason>
    </Excluded>
    <Excluded>
        <Name>test-net-GH-5504.js</Name>
        <Description>This is a complicated console-based test. Figure it out later.</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-byteswritten.js</Name>
        <Description>Doesn't work exactly the same as Node yet.</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-full-response.js</Name>
        <Description>Relies on ab which is hard to make portable.</Description>
    </Excluded>
    <Excluded>
        <Name>test-script-context.js</Name>
        <Description>Depends on specific Node error messages.</Description>
    </Excluded>
    <Excluded>
        <Name>test-pipe.js</Name>
        <Description>This is way broken now and needs to be disabled so others tests can run.</Description>
    </Excluded>
    <Excluded>
        <Name>test-http-localaddress-bind-error.js</Name>
        <Description>Race condition in closing the server socket when it may have been closed already.</Description>
    </Excluded>

    <!-- DEPRECATION
         These tests depend on the "&amp;&amp;throw-deprecation" feature of Node, not implemented here.
    -->
    <Excluded>
        <Name>test-fs-readfile-error.js</Name>
        <Reason>Depends on --throw-deprecation</Reason>
    </Excluded>
</ExcludedTests>
